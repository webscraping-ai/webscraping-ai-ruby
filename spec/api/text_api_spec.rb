=begin
#WebScraping.AI

#WebScraping.AI scraping API provides LLM-powered tools with Chromium JavaScript rendering, rotating proxies, and built-in HTML parsing.

The version of the OpenAPI document: 3.2.0
Contact: support@webscraping.ai
Generated by: https://openapi-generator.tech
Generator version: 7.11.0

=end

require 'spec_helper'
require 'json'

# Unit tests for WebScrapingAI::TextApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TextApi' do
  before do
    # run before each test
    @api_instance = WebScrapingAI::TextApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TextApi' do
    it 'should create an instance of TextApi' do
      expect(@api_instance).to be_instance_of(WebScrapingAI::TextApi)
    end
  end

  # unit tests for get_text
  # Page text by URL
  # Returns the visible text content of a webpage specified by the URL. Can be used to feed data to LLM models. The response can be in plain text, JSON, or XML format based on the text_format parameter. Proxies and Chromium JavaScript rendering are used for page retrieval and processing. Returns JSON on error.
  # @param url URL of the target page.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :text_format Format of the text response (plain by default). \&quot;plain\&quot; will return only the page body text. \&quot;json\&quot; and \&quot;xml\&quot; will return a json/xml with \&quot;title\&quot;, \&quot;description\&quot; and \&quot;content\&quot; keys.
  # @option opts [Boolean] :return_links [Works only with text_format&#x3D;json] Return links from the page body text (false by default). Useful for building web crawlers.
  # @option opts [Hash<String, String>] :headers HTTP headers to pass to the target page. Can be specified either via a nested query parameter (...&amp;headers[One]&#x3D;value1&amp;headers&#x3D;[Another]&#x3D;value2) or as a JSON encoded object (...&amp;headers&#x3D;{\&quot;One\&quot;: \&quot;value1\&quot;, \&quot;Another\&quot;: \&quot;value2\&quot;}).
  # @option opts [Integer] :timeout Maximum web page retrieval time in ms. Increase it in case of timeout errors (10000 by default, maximum is 30000).
  # @option opts [Boolean] :js Execute on-page JavaScript using a headless browser (true by default).
  # @option opts [Integer] :js_timeout Maximum JavaScript rendering time in ms. Increase it in case if you see a loading indicator instead of data on the target page.
  # @option opts [String] :wait_for CSS selector to wait for before returning the page content. Useful for pages with dynamic content loading. Overrides js_timeout.
  # @option opts [String] :proxy Type of proxy, use residential proxies if your site restricts traffic from datacenters (datacenter by default). Note that residential proxy requests are more expensive than datacenter, see the pricing page for details.
  # @option opts [String] :country Country of the proxy to use (US by default).
  # @option opts [String] :custom_proxy Your own proxy URL to use instead of our built-in proxy pool in \&quot;http://user:password@host:port\&quot; format (&lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://webscraping.ai/proxies/smartproxy\&quot;&gt;Smartproxy&lt;/a&gt; for example).
  # @option opts [String] :device Type of device emulation.
  # @option opts [Boolean] :error_on_404 Return error on 404 HTTP status on the target page (false by default).
  # @option opts [Boolean] :error_on_redirect Return error on redirect on the target page (false by default).
  # @option opts [String] :js_script Custom JavaScript code to execute on the target page.
  # @return [String]
  describe 'get_text test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
